/**
 * Utility functions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord
 */
import { getBangkokDateTime } from './dateUtils';
import { calculateShippingCost } from './shippingUtils';

/**
 * ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord webhook
 * @param message ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠ embed ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord
 * @param webhookUrl URL ‡∏Ç‡∏≠‡∏á Discord webhook
 * @param debugInfo ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ debug ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (optional)
 * @returns Promise ‡∏ó‡∏µ‡πà‡∏à‡∏∞ resolve ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
 */
export async function sendDiscordNotification(
  message: string | object,
  webhookUrl = process.env.DISCORD_WEBHOOK_URL,
  debugInfo: Record<string, any> = {}
): Promise<Response | null> {
  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ webhookUrl ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (!webhookUrl) {
      console.error('Discord webhook URL is not defined in environment variables');
      return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏¢‡∏ô error
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ webhookUrl ‡πÄ‡∏õ‡πá‡∏ô URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!webhookUrl.startsWith('http')) {
      console.error('Invalid Discord webhook URL format:', webhookUrl);
      return null;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á body ‡∏Ç‡∏≠‡∏á request
    let body: any;
    
    if (typeof message === 'string') {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô string ‡∏à‡∏∞‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
      body = {
        content: message,
      };
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô object ‡∏à‡∏∞‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô embed
      body = message;
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥
    // ‡πÉ‡∏ä‡πâ ISO string ‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô Discord ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    // Discord ‡πÉ‡∏ä‡πâ ISO8601 ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏° timezone ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    const now = new Date();
    const timestamp = now.toISOString();
    
    if (body.embeds && Array.isArray(body.embeds) && body.embeds.length > 0) {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ embeds ‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î timestamp ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å embed
      body.embeds = body.embeds.map((embed: any) => ({
        ...embed,
        timestamp: timestamp
      }));
    }

    // Log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ Discord
    console.log('Sending Discord notification with data:', JSON.stringify({
      ...debugInfo,
      webhookUrlValid: !!webhookUrl,
      webhookUrlLength: webhookUrl?.length || 0,
      messageType: typeof message,
      hasEmbeds: !!body.embeds,
      embeds: body.embeds ? body.embeds.length : 0,
      timestamp: timestamp
    }, null, 2));

    // ‡∏™‡πà‡∏á request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord webhook ‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î timeout
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000); // timeout 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    try {
      const response = await fetch(webhookUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(body),
        signal: controller.signal
      });
      
      clearTimeout(timeoutId);
      
      if (!response.ok) {
        const errorText = await response.text();
        console.error('Discord webhook error:', response.status, errorText);
        return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏¢‡∏ô error
      }
      
      console.log('Discord notification sent successfully');
      return response;
    } catch (fetchError) {
      clearTimeout(timeoutId);
      console.error('Error fetching Discord webhook:', fetchError);
      return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏¢‡∏ô error
    }
  } catch (error) {
    console.error('Error in sendDiscordNotification:', error);
    return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏¢‡∏ô error
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
 * @param orderData ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
 * @returns Discord embed object
 */
export async function createOrderNotificationEmbed(orderData: any) {
  console.log('Creating order notification embed with data:', JSON.stringify({
    orderNumber: orderData?.orderNumber,
    paymentMethod: orderData?.paymentMethod,
    customerInfo: orderData?.customerInfo,
    hasItems: !!orderData?.items,
    itemsLength: orderData?.items?.length
  }, null, 2));

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• items ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error
  if (!orderData || !orderData.items || !Array.isArray(orderData.items) || orderData.items.length === 0) {
    console.warn('Invalid or missing items in order data for Discord notification');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• items
    return {
      embeds: [
        {
          title: `üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà ${orderData?.orderNumber ? `#${orderData.orderNumber}` : ''}`,
          color: 0x24B493,
          description: '‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
          timestamp: new Date().toISOString(),
          footer: {
            text: 'TreeTelu Order System'
          }
        }
      ]
    };
  }
  
  try {
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const subtotal = Number(orderData.items.reduce((sum: number, item: any) => sum + (Number(item.unitPrice) * Number(item.quantity)), 0));
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const shippingCost = await calculateShippingCost(subtotal);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const discount = Number(orderData.discount || 0);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏∏‡∏ó‡∏ò‡∏¥
    const totalAmount = subtotal + shippingCost - discount;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    const customerInfo = orderData.customerInfo || {};
    const customerName = `${customerInfo.firstName || ''} ${customerInfo.lastName || ''}`.trim() || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const customerEmail = customerInfo.email || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const customerPhone = customerInfo.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    const shippingInfo = orderData.shippingInfo || {};
    const receiverName = `${shippingInfo.receiverName || ''} ${shippingInfo.receiverLastname || ''}`.trim() || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const receiverPhone = shippingInfo.receiverPhone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const addressLine = shippingInfo.addressLine || '';
    const tambonName = shippingInfo.tambonName || '';
    const amphureName = shippingInfo.amphureName || '';
    const provinceName = shippingInfo.provinceName || '';
    const zipCode = shippingInfo.zipCode || '';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isShippingToOthers = shippingInfo.shippingType === 'OTHER';
    
    let fullAddress = '';
    if (isShippingToOthers) {
      // ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏≤
      fullAddress = addressLine || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    } else {
      // ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ï‡πá‡∏°
      fullAddress = `${addressLine} ${tambonName} ${amphureName} ${provinceName} ${zipCode}`.trim() || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    let itemsField = '';
    try {
      itemsField = orderData.items.map((item: any, index: number) => {
        const productName = item.productName || `‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ #${item.productId || index + 1}`;
        const quantity = Number(item.quantity) || 1;
        const unitPrice = Number(item.unitPrice) || 0;
        return `${index + 1}. ${productName} x${quantity} (${unitPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó/‡∏ä‡∏¥‡πâ‡∏ô)`;
      }).join('\n');
    } catch (error) {
      console.error('Error generating items field for Discord notification:', error);
      itemsField = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ';
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed
    return {
      embeds: [
        {
          title: `üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà #${orderData.orderNumber || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`,
          color: 0x24B493, // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏Ç‡∏≠‡∏á TreeTelu
          fields: [
            {
              name: 'üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
              value: `**‡∏ä‡∏∑‡πà‡∏≠:** ${customerName}\n**‡∏≠‡∏µ‡πÄ‡∏°‡∏•:** ${customerEmail}\n**‡πÇ‡∏ó‡∏£:** ${customerPhone}`,
              inline: false
            },
            {
              name: 'üõí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
              value: itemsField || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
              inline: false
            },
            {
              name: 'üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°',
              value: `**‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:** ${subtotal.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n**‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:** ${shippingCost === 0 ? '‡∏ü‡∏£‡∏µ' : `${shippingCost.toLocaleString()} ‡∏ö‡∏≤‡∏ó`}${discount > 0 ? `\n**‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î${orderData.discountCode ? ` (${orderData.discountCode})` : ''}:** -${discount.toLocaleString()} ‡∏ö‡∏≤‡∏ó` : ''}\n**‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô:** ${totalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
              inline: true
            },
            {
              name: 'üí≥ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô',
              value: getPaymentMethodThai(orderData.paymentMethod || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'),
              inline: true
            },
            {
              name: 'üöö ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
              value: `**‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:** ${receiverName}\n**‡πÇ‡∏ó‡∏£:** ${receiverPhone}\n**‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:** ${fullAddress}`,
              inline: false
            }
          ],
          timestamp: new Date().toISOString(),
          footer: {
            text: 'TreeTelu Order System'
          }
        }
      ]
    };
  } catch (error) {
    console.error('Error creating order notification embed:', error);
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î error
    return {
      embeds: [
        {
          title: `üì¶ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà ${orderData?.orderNumber ? `#${orderData.orderNumber}` : ''}`,
          color: 0xFF0000, // ‡∏™‡∏µ‡πÅ‡∏î‡∏á
          description: '‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
          timestamp: new Date().toISOString(),
          footer: {
            text: 'TreeTelu Order System'
          }
        }
      ]
    };
  }
}

/**
 * ‡πÅ‡∏õ‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
 * @param paymentMethod ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
 * @returns ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
 */
function getPaymentMethodThai(paymentMethod: string): string {
  switch (paymentMethod) {
    case 'BANK_TRANSFER': 
      return '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£';
    case 'CREDIT_CARD': 
      return '‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï';
    case 'PROMPTPAY': 
      return '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå';
    case 'COD': 
      return '‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á';
    default: 
      return paymentMethod;
  }
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
 * @param paymentData ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
 * @returns Discord embed object
 */
export function createPaymentNotificationEmbed(paymentData: any) {
  console.log('Creating payment notification embed with data:', JSON.stringify(paymentData, null, 2));
  
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î base URL ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
  const baseUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ
  let slipImageUrl = '';
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ slipUrl ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (paymentData.slipUrl) {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ URL ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ http ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (paymentData.slipUrl.startsWith('http')) {
      slipImageUrl = paymentData.slipUrl;
    } else {
      // ‡∏ó‡∏≥ URL ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô absolute URL ‡πÇ‡∏î‡∏¢‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö baseUrl
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ slipUrl ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ / ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const slipPath = paymentData.slipUrl.startsWith('/') 
        ? paymentData.slipUrl 
        : `/${paymentData.slipUrl}`;
      
      slipImageUrl = `${baseUrl}${slipPath}`;
    }
    
    console.log('Discord payment notification image URL:', slipImageUrl);
  } else {
    console.warn('No slip image URL provided in payment data');
  }
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed object
  const embed = {
    title: `üí∏ ‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà`,
    color: 0x4CC9AD, // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á TreeTelu
    fields: [
      {
        name: 'üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô',
        value: `**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:** ${paymentData.orderNumber}\n**‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:** ${Number(paymentData.amount).toLocaleString()} ‡∏ö‡∏≤‡∏ó\n**‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:** ${paymentData.bankName || '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå'}`,
        inline: false
      }
    ],
    timestamp: new Date().toISOString(),
    footer: {
      text: 'TreeTelu Payment System'
    }
  };
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° image URL ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ slipImageUrl
  if (slipImageUrl) {
    // @ts-ignore
     embed.image = { url: slipImageUrl };

     // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û mockup
    //embed.image = { url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_light_color_272x92dp.png' };
  }
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed
  return {
    embeds: [embed]
  };
} 